[build-system]
requires = ["hatchling", "hatch-vcs"]
build-backend = "hatchling.build"

[project]
name = "datadog-agent-dev"
dynamic = ["version"]
description = "Tool for developing on the Datadog Agent platform"
readme = "README.md"
requires-python = "~=3.12.0"
license = "MIT"
authors = [
  { name = "Datadog, Inc.", email = "dev@datadoghq.com" },
]
keywords = [
  "datadog",
  "agent",
]
classifiers = [
  "Development Status :: 4 - Beta",
  "Programming Language :: Python",
  "Programming Language :: Python :: 3.12",
  "Programming Language :: Python :: Implementation :: CPython",
  "Programming Language :: Python :: Implementation :: PyPy",
]
dependencies = [
  "click~=8.1",
  "dep-sync~=0.1",
  "find-exe~=0.1",
  "msgspec~=0.18",
  "msgspec-click~=0.2",
  "packaging",
  "platformdirs~=4.2",
  "rich~=13.7",
  "rich-click~=1.8",
  "tomlkit~=0.13",
  # https://peps.python.org/pep-0696/
  "typing-extensions>=4.6.0; python_version < '3.13'",
  "uv~=0.5.15",
]

[dependency-groups]
### The following dependencies were defined in the build image repo
# https://github.com/DataDog/datadog-agent-buildimages/blob/main/requirements/constraints.txt
legacy-constraints = [
    "azure-identity==1.14.1",
    "azure-mgmt-resource==23.0.1",
    "jira==3.5.2",
    "setuptools==42.0.2",
    "virtualenv==16.7.9",
    "wheel==0.40.0",
]
# https://github.com/DataDog/datadog-agent-buildimages/blob/main/requirements.txt
legacy-build = [
    "awscli==1.29.45",
    "boto3==1.28.45",
    "codeowners==0.6.0",
    "datadog-api-client==2.29.0",
    "docker-squash==1.1.0",
    "docker==6.1.3",
    "dulwich==0.21.6",
    "invoke==2.2.0",
    "mypy==1.10.0",
    # https://github.com/pypa/setuptools/issues/4501
    "packaging==24.1",
    "parameterized==0.9.0",
    "pygithub==1.59.1",
    "python-gitlab==4.4.0",
    "reno==3.5.0",
    "requests==2.31.0",
    "ruff==0.3.5",
    "semver==2.10.0",
    "toml==0.10.2",
    # mypy
    "types-pyyaml==6.0.12.20240311",
    "types-requests==2.30.0",
    "types-tabulate==0.9.0.20240106",
    "types-toml==0.10.8.20240310",
    # urllib3 major version 2, released on May 4th 2023, breaks botocore used
    # by awscli (removed DEFAULT_CIPHERS list from urllib3.util.ssl_)
    "urllib3==1.26.15",
    "vulture==2.6",
]
# https://github.com/DataDog/datadog-agent-buildimages/blob/main/requirements/agent-deploy.txt
legacy-agent-deploy = [
    "azure-identity==1.14.1",
    "azure-mgmt-resource==23.0.1",
    "pygithub==1.59.1",
    "setuptools==42.0.2",
    "virtualenv==16.7.9",
]
# https://github.com/DataDog/datadog-agent-buildimages/blob/main/requirements/btf-gen.txt
legacy-btf-gen = [
    "awscli==1.29.45",
    "invoke==2.2.0",
    "python-gitlab==4.4.0",
    "requests==2.31.0",
]
# https://github.com/DataDog/datadog-agent-buildimages/blob/main/requirements/circleci.txt
legacy-circleci = [
    "wheel==0.40.0",
]
# https://github.com/DataDog/datadog-agent-buildimages/blob/main/requirements/e2e.txt
legacy-e2e = [
    "codeowners==0.6.0",
    "docker-squash==1.1.0",
    "docker==6.1.3",
    "invoke==2.2.0",
    "packaging==24.1",
    "reno==3.5.0",
    "requests==2.31.0",
    "python-gitlab==4.4.0",
    "toml==0.10.2",
]
### The following dependencies were defined in the Agent tasks directory:
# https://github.com/DataDog/datadog-agent/blob/main/tasks/requirements.txt
legacy-tasks = [
    { include-group = "legacy-build" },
    { include-group = "legacy-docs" },
    { include-group = "legacy-github" },
    { include-group = "legacy-notifications" },
    { include-group = "legacy-release" },
    "debugpy==1.8.2",
]
# https://github.com/DataDog/datadog-agent/blob/main/tasks/requirements_docs.txt
legacy-docs = [
    "mkdocs~=1.5.3",
    "mkdocs-material~=9.5.1",
    # Plugins
    "mkdocs-minify-plugin~=0.7.1",
    "mkdocs-git-revision-date-localized-plugin~=1.2.1",
    "mkdocs-glightbox~=0.3.5",
    # Extensions
    "pymdown-extensions~=10.5.0",
    # Necessary for syntax highlighting in code blocks
    "pygments~=2.17.2",
    # Validation
    "linkchecker~=10.5.0",
]
# https://github.com/DataDog/datadog-agent/blob/main/tasks/requirements_release_tasks.txt
legacy-release = [
    "atlassian-python-api==3.41.3",
    "pandoc==2.4",
    "reno==3.5.0",
    "yattag==1.15.2",
]
# https://github.com/DataDog/datadog-agent/blob/main/tasks/libs/requirements-github.txt
legacy-github = [
    "beautifulsoup4~=4.12.3",
    "cryptography==39.0.1",
    "lxml~=5.2.2",
    "pygithub==1.59.1",
    "pyjwt==2.4.0",
    "toml~=0.10.2",
    "slack-sdk~=3.27.1",
]
# https://github.com/DataDog/datadog-agent/blob/main/tasks/libs/requirements-notifications.txt
legacy-notifications = [
    "codeowners==0.6.0",
    "invoke==2.2.0",
    "requests==2.31.0",
    "pyyaml==6.0.1",
    "slack-sdk~=3.27.1",
]
# https://github.com/DataDog/datadog-agent/blob/main/tasks/kernel_matrix_testing/requirements.txt
legacy-kernel-matrix-testing = [
    "jinja2==3.0.3",
    "libvirt-python==10.9.0",
    "termcolor==2.5.0",
    "thefuzz==0.22.1",
    "python-levenshtein==0.26.1",
    "tabulate[widechars]==0.9.0",
]
# https://github.com/DataDog/test-infra-definitions/blob/main/requirements.txt
legacy-test-infra-definitions = [
    "colorama>=0.4.4",
    "pydantic==2.10.4",
    "pyperclip==1.9.0",
    "pyright==1.1.391",
    "termcolor==2.5.0",
]

[project.urls]
Homepage = "https://github.com/DataDog/datadog-agent-dev"
Documentation = "https://datadoghq.dev/datadog-agent/setup/"

[project.scripts]
deva = "deva.cli:main"

[tool.hatch.version]
source = "vcs"

[tool.hatch.version.raw-options]
version_scheme = "python-simplified-semver"
local_scheme = "no-local-version"

[tool.hatch.build.targets.wheel]
packages = ["src/deva"]

[tool.hatch.build.targets.wheel.shared-data]
"uv.lock" = "deva-data/uv.lock"
# TODO: remove when this is fixed https://github.com/astral-sh/uv/issues/6722
"pyproject.toml" = "deva-data/pyproject.toml"

[tool.hatch.build.hooks.vcs]
version-file = "src/deva/_version.py"

[tool.mypy]
disallow_untyped_defs = true
disallow_incomplete_defs = true
enable_error_code = ["ignore-without-code", "truthy-bool"]
follow_imports = "normal"
ignore_missing_imports = true
pretty = true
show_column_numbers = true
warn_no_return = true
warn_unused_ignores = true

[[tool.mypy.overrides]]
module = "tests.*"
disallow_untyped_defs = false
check_untyped_defs = false
no_implicit_optional = false
strict_optional = false
warn_return_any = false
warn_unused_ignores = false

[tool.coverage.run]
source_pkgs = ["deva", "tests"]
branch = true
parallel = true
omit = [
  "src/deva/__main__.py",
]

[tool.coverage.paths]
deva = ["src/deva", "*/deva/src/deva"]
tests = ["tests", "*/deva/tests"]

[tool.coverage.report]
show_missing = true
exclude_lines = [
  "no cov",
  "if __name__ == .__main__.:",
  "if TYPE_CHECKING:",
]
